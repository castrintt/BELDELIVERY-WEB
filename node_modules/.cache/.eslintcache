[{"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\index.js":"1","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\App.jsx":"2","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\routes.jsx":"3","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\Home\\index.jsx":"4","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\PerfilLoja\\index.jsx":"5","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\PerfilCliente\\index.jsx":"6","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\Cadastro\\index.jsx":"7","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\Login\\index.jsx":"8","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\CadastroLoja\\index.jsx":"9","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\OrdersClient\\index.jsx":"10","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\services\\api\\firebaseConfig.js":"11","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\services\\validations\\validation.js":"12","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\SideBarLogin\\SidebarLogin.jsx":"13","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\NavBarTop\\index.jsx":"14","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\Categorias\\index.jsx":"15","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\Loading\\index.jsx":"16","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\CarrinhoModal\\index.jsx":"17","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\NavBarLeft\\index.jsx":"18"},{"size":300,"mtime":1667137589612,"results":"19","hashOfConfig":"20"},{"size":114,"mtime":1667088804512,"results":"21","hashOfConfig":"20"},{"size":1334,"mtime":1669168566476,"results":"22","hashOfConfig":"20"},{"size":442,"mtime":1668736802296,"results":"23","hashOfConfig":"20"},{"size":294,"mtime":1667098248510,"results":"24","hashOfConfig":"20"},{"size":2296,"mtime":1668737746338,"results":"25","hashOfConfig":"20"},{"size":14353,"mtime":1669166845254,"results":"26","hashOfConfig":"20"},{"size":4457,"mtime":1669247766284,"results":"27","hashOfConfig":"20"},{"size":342,"mtime":1667143111628,"results":"28","hashOfConfig":"20"},{"size":1942,"mtime":1668882906198,"results":"29","hashOfConfig":"20"},{"size":470,"mtime":1669153566688,"results":"30","hashOfConfig":"20"},{"size":1450,"mtime":1669174047450,"results":"31","hashOfConfig":"20"},{"size":214,"mtime":1669155106785,"results":"32","hashOfConfig":"20"},{"size":2503,"mtime":1668736144060,"results":"33","hashOfConfig":"20"},{"size":454,"mtime":1668116273791,"results":"34","hashOfConfig":"20"},{"size":387,"mtime":1667364350862,"results":"35","hashOfConfig":"20"},{"size":358,"mtime":1668879913665,"results":"36","hashOfConfig":"20"},{"size":5488,"mtime":1669173751209,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v85c2o",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\index.js",[],[],"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\App.jsx",[],[],"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\routes.jsx",["102"],[],"import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport HomePage from \"./pages/Home\";\r\nimport PerfilCliente from \"./pages/PerfilCliente\";\r\nimport PerfilLoja from \"./pages/PerfilLoja\";\r\nimport Login from \"./pages/Login\";\r\nimport Cadastro from \"./pages/Cadastro\";\r\nimport CadastroLoja from \"./pages/CadastroLoja\";\r\nimport OrdersClient from \"./pages/OrdersClient\";\r\n\r\nfunction RouterList(){\r\n    return(\r\n      <Router>\r\n        <Routes>\r\n          <Route path='/' element={<HomePage />}/>\r\n          <Route path='/home' element={<HomePage />}/>\r\n          <Route path='/login' element={<Login />}/>\r\n          <Route path='/cadastro' element={<Cadastro />}/>\r\n          <Route path='/perfil' element={<PerfilCliente />}/>\r\n          <Route path='/perfil/enderecos' element={<PerfilCliente />}/>\r\n          <Route path='/perfil/pedidos' element={<OrdersClient />}/>\r\n          <Route path='/perfil/alterar-senha' element={<PerfilCliente />}/>\r\n          <Route path='/lojas' element={<PerfilLoja />}/>\r\n          <Route path='/lojas/:store' element={<PerfilLoja />}/>\r\n          <Route path='/lojas/:store/gerenciar-pedidos' element={<PerfilLoja />}/>\r\n          <Route path='/delivery/descobrir/:categoria' element={<HomePage />}/>\r\n        </Routes>\r\n      </Router>\r\n    )\r\n}\r\n\r\nexport default RouterList;","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\Home\\index.jsx",[],[],"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\PerfilLoja\\index.jsx",[],[],"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\PerfilCliente\\index.jsx",["103","104","105"],[],"import { useEffect, useState } from \"react\";\r\nimport NavBarTop from \"../../components/NavBarTop\";\r\nimport css from \"./styled.module.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst PerfilCliente = () => {\r\n    const [ user, setUser ] = useState();\r\n\r\n    const navigate = useNavigate();\r\n    const actualUrl = [window.location.pathname];\r\n    const idClient = localStorage.getItem(\"id\");\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://localhost:7221/api/ClientProfile/get-by-idclient/${idClient}`)\r\n        .then((res) => {\r\n            setUser(res.data);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <NavBarTop />\r\n            <div className={css.container}>\r\n                <div className={css.tittle}>\r\n                    <h2>Meu Perfil</h2>\r\n                    <button>EDITAR</button>\r\n                </div>\r\n                <div className={css.container_form_user}>\r\n                    <div>\r\n                        <span>Nome:</span>\r\n                        <span>{user?.name || \"Nome não cadastrado\"}</span>\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        <span>CPF:</span>\r\n                        <span>{user?.document || \"Documento não cadastrado\"}</span>\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        <span>Telefone:</span>\r\n                        <span>{user?.telPhone || \"Telefone não cadastrado\"}</span>\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        <span>Celular:</span>\r\n                        <span>{user?.cellPhone || \"Celular não cadastrado\"}</span>\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        <span>Título:</span>\r\n                        <span>{user?.tittleStatus || \"0\"}</span>\r\n                    </div>\r\n                    <hr />\r\n                    <div>\r\n                        <span>Pedidos:</span>\r\n                        <span>{user?.orders || \"0\"}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PerfilCliente;","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\Cadastro\\index.jsx",["106","107","108","109","110","111","112"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport css from \"./styled.module.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../components/Loading\";\r\nimport SidebarLogin from \"../../components/SideBarLogin/SidebarLogin\";\r\n\r\nconst Cadastro = () => {\r\n    const [ typeCadastro, setTypeCadastro ] = useState(null);\r\n    const [ errorMesenge, setErrorMesenge ] = useState(null);\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ clientConfirmPassword, setClientConfirmPassword ] = useState();\r\n\r\n    const [ clientForm, setClientForm ] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const [ storeForm, setStoreForm ] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        document: \"\",\r\n        urlName: \"\",\r\n        typeStore: \"\",\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const typeCadastroOption = [\r\n        \"Client\",\r\n        \"Store\"\r\n    ];\r\n\r\n    const postFormClient = () => {\r\n        let name = validateName(clientForm.name);\r\n        let email = validateEmail(clientForm.email);\r\n        let password = validatePassword(clientForm.password);\r\n\r\n        if(name === true){\r\n            if(email === true){\r\n                if(password === true){\r\n                    createClient();\r\n                    setErrorMesenge(null);\r\n                } else {setErrorMesenge(password);};\r\n            } else {setErrorMesenge(email);};\r\n        } else {setErrorMesenge(name); };\r\n    };\r\n    \r\n    const postFormStore = () => {\r\n        let name = validateName(storeForm.name);\r\n        let email = validateEmail(storeForm.email);\r\n        let password = validatePassword(storeForm.password);\r\n        let document = validateDocument(storeForm.document);\r\n        urlStore(storeForm.name);\r\n\r\n        if(name === true){\r\n            if(email === true){\r\n                if(password === true){\r\n                    if(document === true){\r\n                       if(storeForm.typeStore.length > 0){\r\n                            createStore();\r\n                            setErrorMesenge(null);\r\n                       } else setErrorMesenge(\"Selecione uma categoria\");\r\n                    } else setErrorMesenge(document);\r\n                } else setErrorMesenge(password);\r\n            } else setErrorMesenge(email);\r\n        } else setErrorMesenge(name);\r\n    };\r\n\r\n    const validateName = (name) => {\r\n        if(name.length > 2){\r\n            return true;\r\n        } else return \"O nome deve ter mais de 2 caracteres\";\r\n    };\r\n\r\n    const validateEmail = (email) => {\r\n        let regex = /^([a-z]){1,}([a-z0-9._-]){1,}([@]){1}([a-z]){2,}([.]){1}([a-z]){2,}([.]?){1}([a-z]?){2,}$/i;\r\n        \r\n        if(regex.test(email)){\r\n            return true;\r\n        } else return \"Digite um e-mail válido\"\r\n    };\r\n\r\n    const validatePassword = (password) => {\r\n        if(password.length >= 6){\r\n            if(password === clientConfirmPassword){\r\n                return true\r\n            } return \"As senhas devem ser iguais\";\r\n        } else return \"A senha deve ter pelo menos 6 caracteres\";\r\n    };\r\n    \r\n    const validateDocument = (document) => {\r\n        if(document > 10){\r\n            return true\r\n        } else return \"O documento deve ter pelo menos 11 caracteres\";\r\n    };\r\n\r\n    const urlStore = (name) => {\r\n        let url = name.replace(/ /g, \"-\")\r\n        setStoreForm({...storeForm, urlName: url.toLowerCase()})\r\n    };\r\n\r\n    const createClient = () => {\r\n        axios.post(\"https://localhost:7221/api/Client/create\", clientForm)\r\n        .then((res) => {\r\n            setClientForm({...clientForm,\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\"\r\n            })\r\n            setLoading(true);\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n                navigate(\"/login\")\r\n            }, \"1000\");\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    const createStore = () => {\r\n        axios.post(\"https://localhost:7221/api/Store/create\", storeForm)\r\n        .then((res) => {\r\n            setClientForm({...storeForm,\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                document: \"\"\r\n            })\r\n            setLoading(true);\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n                navigate(\"/login\")\r\n            }, \"1000\");\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setLoading(false);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {loading && <Loading />}\r\n            <main className={css.container_cadastro}>\r\n                <section className={css.content_cadastro}>\r\n                    <SidebarLogin />\r\n                    <div className={css.container_form}>\r\n                        <h1>Faça seu cadastro</h1>\r\n                        <div className={css.inputGroup}>\r\n                            <label htmlFor=\"nameclient\">Nome:</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                id=\"nameclient\"\r\n                                onChange={e => setClientForm({...clientForm, name: e.target.value})}\r\n                                value={clientForm.name}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={css.inputGroup}>\r\n                            <label htmlFor=\"emailclient\">Email:</label>\r\n                            <input \r\n                                type=\"email\"\r\n                                id=\"emailclient\"\r\n                                onChange={e => setClientForm({...clientForm, email: e.target.value})}\r\n                                value={clientForm.email}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className={css.inputGroup}>\r\n                            <label htmlFor=\"passwordclient\">Senha:</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"passwordclient\"\r\n                                onChange={e => setClientForm({...clientForm, password: e.target.value})}\r\n                                value={clientForm.password}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className={css.inputGroup}>\r\n                            <label htmlFor=\"confirmpasswordclient\">Confirme a senha:</label>\r\n                            <input \r\n                                type=\"password\"\r\n                                id=\"confirmpasswordclient\"\r\n                                onChange={e => setClientConfirmPassword(e.target.value)}\r\n                                value={clientConfirmPassword}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n            {/* {typeCadastro == null ? (\r\n                <section className={css.container_login}>\r\n                    <div className={css.container_select_type}>\r\n                        <h1>Faça seu cadastro</h1>\r\n                        <p>Escolha o tipo da sua conta:</p>\r\n                        <div>\r\n                            <button onClick={() => setTypeCadastro(typeCadastroOption[0])}>Cliente</button>\r\n                            <button onClick={() => setTypeCadastro(typeCadastroOption[1])}>Loja</button>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            ) : (\r\n            <section className={css.container_login}>\r\n                <div className={css.card_login}>\r\n                    <h1>Faça seu cadastro</h1>\r\n                    {typeCadastro === \"Client\" && (\r\n                        <div className={css.container_form}>\r\n                            <div>\r\n                                <label htmlFor=\"nameclient\">Nome:</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    id=\"nameclient\"\r\n                                    onChange={e => setClientForm({...clientForm, name: e.target.value})}\r\n                                    value={clientForm.name}\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor=\"emailclient\">Email:</label>\r\n                                <input \r\n                                    type=\"email\"\r\n                                    id=\"emailclient\"\r\n                                    onChange={e => setClientForm({...clientForm, email: e.target.value})}\r\n                                    value={clientForm.email}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <label htmlFor=\"passwordclient\">Senha:</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"passwordclient\"\r\n                                    onChange={e => setClientForm({...clientForm, password: e.target.value})}\r\n                                    value={clientForm.password}\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor=\"confirmpasswordclient\">Confirme a senha:</label>\r\n                                <input \r\n                                    type=\"password\"\r\n                                    id=\"confirmpasswordclient\"\r\n                                    onChange={e => setClientConfirmPassword(e.target.value)}\r\n                                    value={clientConfirmPassword}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {typeCadastro === \"Store\" && (\r\n                        <div className={css.container_form}>\r\n                            <div>\r\n                                <label htmlFor=\"name\">Nome da loja:</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    id=\"name\"\r\n                                    onChange={e => setStoreForm({...storeForm, name: e.target.value})}\r\n                                    value={storeForm.name}\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor=\"email\">Email:</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    id=\"email\"\r\n                                    onChange={e => setStoreForm({...storeForm, email: e.target.value})}\r\n                                    value={storeForm.email}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <label htmlFor=\"password\">Senha:</label>\r\n                                <input\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={e => setStoreForm({...storeForm, password: e.target.value})}\r\n                                    value={storeForm.password}\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor=\"confirm-password\">Confirme a senha:</label>\r\n                                <input \r\n                                    type=\"password\"\r\n                                    id=\"confirm-password\"\r\n                                    onChange={e => setClientConfirmPassword(e.target.value)}\r\n                                    value={clientConfirmPassword}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div>\r\n                                <label htmlFor=\"document\">CPF/CNPJ:</label>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    id=\"document\"\r\n                                    onChange={e => setStoreForm({...storeForm, document: e.target.value})}\r\n                                    value={storeForm.document}\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label htmlFor=\"document\">Categoria da loja:</label>\r\n                                <select\r\n                                    name=\"document\"\r\n                                    id=\"document\"\r\n                                    className={css.select_input}\r\n                                    onChange={e => setStoreForm({...storeForm, typeStore: e.target.value})}\r\n                                >\r\n                                    <option value=\"\" selected disabled>Selecione</option>\r\n                                    <option value=\"Lanchonete\">Lanchonete</option>\r\n                                    <option value=\"Hamburgueria\">Hamburgueria</option>\r\n                                    <option value=\"Bar\">Bar</option>\r\n                                    <option value=\"Sorveteria\">Sorveteria</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                   {errorMesenge !== null && (\r\n                    <div className={css.error_mesenge_form}>\r\n                        <span>{errorMesenge}</span>\r\n                    </div>\r\n                   )}\r\n                    <div>\r\n                        <Button onClick={() => typeCadastro === \"Client\" ? postFormClient() : postFormStore()} variant=\"primary\">Cadastrar</Button>\r\n                    </div>\r\n                </div>\r\n            </section> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cadastro;","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\Login\\index.jsx",["113","114"],[],"import { useNavigate } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport css from \"./styled.module.css\";\r\nimport { useState } from \"react\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { db } from \"../../services/api/firebaseConfig.js\";\r\nimport { emailValidate, passwordLoginValidate } from \"../../services/validations/validation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Login = () => {\r\n    const [loginType, setLoginType] = useState(\"Client\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [errorStatus, setErrorStatus] = useState(true);\r\n    const [errorMessenge, setErrorMessenge] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const DataVerify = () => {\r\n        const emailValidateResponse = emailValidate(formData.email);\r\n        const passwordValidateResponse = passwordLoginValidate(formData.password);\r\n\r\n        if (emailValidateResponse){\r\n            if (passwordValidateResponse){\r\n                setErrorStatus(false);\r\n            } else {\r\n                setErrorStatus(true);\r\n                setErrorMessenge(passwordValidateResponse)\r\n            };\r\n        } else {\r\n            setErrorStatus(true);\r\n            setErrorMessenge(emailValidateResponse);\r\n        };\r\n    };\r\n\r\n    const loginClient = () => {\r\n        setLoading(true);\r\n        db.collection(\"client\")\r\n        .where(\"email\", \"==\" , formData.email)\r\n        .where(\"password\", \"==\", formData.password)\r\n        .get()\r\n        .then((res) => {\r\n            if(res.size > 0){\r\n                const caminhoValue = res.docs[0]._delegate._document.data.value.mapValue.fields;\r\n                console.log(caminhoValue)\r\n                localStorage.setItem(\"clientId\", res.docs[0].id);\r\n                localStorage.setItem(\"clientName\", caminhoValue.name.stringValue);\r\n                localStorage.setItem(\"userType\", caminhoValue.type.integerValue);\r\n                navigate(\"/home\");\r\n            }\r\n            setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setLoading(false);\r\n        })\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if(loginType === \"Client\" & !errorStatus){\r\n            loginClient();\r\n        } else {\r\n            console.log(\"nao\");\r\n        }\r\n    }, [errorStatus])\r\n\r\n    return(\r\n        <>\r\n            {loading && <Loading />}\r\n            <section className={css.container_login}>\r\n                <div className={css.card_login}>\r\n                    <h1>{loginType === \"Client\" ? \"Faça Login e mate sua fome!\" : \"Faça login e venda conosco!\"}</h1>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"email\"\r\n                            placeholder=\"E-mail\"\r\n                            value={formData.email}\r\n                            onChange={e => setFormData({...formData, email: e.target.value})}\r\n                        />\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"password\"\r\n                            placeholder=\"Senha\"\r\n                            value={formData.password}\r\n                            onChange={e => setFormData({...formData, password: e.target.value})}\r\n                        />\r\n                        <span className={css.link} onClick={() => navigate(\"/esqueci-minha-senha\")}>\r\n                            Esqueceu sua senha?\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Button variant=\"primary\" onClick={() => DataVerify()}>LOGIN</Button>\r\n                        <div className={css.link} onClick={() => navigate(\"/cadastro\")}>Ainda não tem conta? Cadastre-se</div>\r\n                    </div>\r\n                    \r\n                    {loginType === \"Client\" ? (\r\n                        <div onClick={() => setLoginType(\"Store\")}>\r\n                            <span>Logue como Loja</span>\r\n                        </div>\r\n                    ) : (\r\n                        <div onClick={() => setLoginType(\"Client\")}>\r\n                            <span>Logue como Cliente</span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n           </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\CadastroLoja\\index.jsx",["115"],[],"import NavBarTop from \"../../components/NavBarTop\";\r\nimport css from \"./styled.module.css\"\r\n\r\nconst CadastroLoja = () => {\r\n\r\n    return(\r\n        <>\r\n        <section className={css.container_login}>\r\n             <div className={css.card_login}>\r\n\r\n             </div>\r\n        </section>\r\n     </>\r\n    )\r\n}\r\n\r\nexport default CadastroLoja;","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\pages\\OrdersClient\\index.jsx",["116","117","118","119","120"],[],"import { useEffect, useState } from \"react\";\r\nimport NavBarTop from \"../../components/NavBarTop\";\r\nimport css from \"./styled.module.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst OrdersClient = () => {\r\n    // const [ user, setUser ] = useState();\r\n\r\n    // const navigate = useNavigate();\r\n    // const actualUrl = [window.location.pathname];\r\n    // const idClient = localStorage.getItem(\"id\");\r\n\r\n    // useEffect(() => {\r\n    //     axios.get(`https://localhost:7221/api/ClientProfile/get-by-idclient/${idClient}`)\r\n    //     .then((res) => {\r\n    //         setUser(res.data);\r\n    //     })\r\n    //     .catch((error) => console.log(error));\r\n    // }, []);\r\n\r\n    return(\r\n        <>\r\n            <NavBarTop />\r\n            <div className={css.container}>\r\n                <div className={css.tittle}>\r\n                    <h2>Meus pedidos</h2>\r\n                </div>\r\n                <Table striped bordered className={css.table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Status</th>\r\n                            <th>Valor</th>\r\n                            <th>Data do pedido</th>\r\n                            <th>Ações</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1</td>\r\n                            <td>Mark</td>\r\n                            <td>Otto</td>\r\n                            <td>@mdo</td>\r\n                            <td>\r\n                                <img src=\"https://img.icons8.com/fluency/30/null/delete-forever.png\"/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                    </Table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrdersClient;","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\services\\api\\firebaseConfig.js",[],[],"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\services\\validations\\validation.js",["121"],[],"import { db } from \"../api/firebaseConfig\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const verifyExitentClient = () => {\r\n    db.collection(\"client\").get()\r\n    .then((res) => {\r\n        console.log(res);\r\n    })\r\n};\r\n\r\nexport const nameValidate = (name) => {\r\n    if(name.length > 2){\r\n        return true;\r\n    } else return \"O nome deve ter mais de 2 caracteres\";\r\n};\r\n\r\nexport const emailValidate = (email) => {\r\n    let regex = /^([a-z]){1,}([a-z0-9._-]){1,}([@]){1}([a-z]){2,}([.]){1}([a-z]){2,}([.]?){1}([a-z]?){2,}$/i;\r\n    \r\n    if(regex.test(email)){\r\n        return true;\r\n    } else return \"Digite um e-mail válido\"\r\n};\r\n\r\nexport const passwordRegisterValidate = (password, clientConfirmPassword) => {\r\n    if(password.length >= 6){\r\n        if(password === clientConfirmPassword){\r\n            return true\r\n        } else return \"As senhas devem ser iguais\";\r\n    } else return \"A senha deve ter pelo menos 6 caracteres\";\r\n};\r\n\r\nexport const passwordLoginValidate = (password) => {\r\n    if(password.length >= 6){\r\n        return true\r\n    } else return \"A senha deve ter pelo menos 6 caracteres\";\r\n};\r\n\r\nexport const documentValidate = (document) => {\r\n    if(document > 10){\r\n        return true\r\n    } else return \"O documento deve ter pelo menos 11 caracteres\";\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.clear(\"clientId\");\r\n    localStorage.clear(\"clientName\");\r\n    localStorage.clear(\"userType\");\r\n};","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\SideBarLogin\\SidebarLogin.jsx",[],[],"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\NavBarTop\\index.jsx",["122","123","124"],[],"// import * as css from \"./styled\";\r\nimport css from \"./styled.module.css\"\r\nimport logo from '../../utilites/img/delivery-logo.png';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CarrinhoModal from \"../CarrinhoModal\";\r\nimport { useState } from \"react\";\r\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\r\nimport NavBarLeft from \"../NavBarLeft\";\r\n\r\nconst NavBarTop = () => {\r\n    const [ openModalCarrinho,  setOpenModalCarrinho] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const ItensDropDownCategorias = [\"Hambugueria\", \"Sorveteria\", \"Bar\"];\r\n\r\n\r\n    return(\r\n        <>\r\n            <CarrinhoModal openModalProps={openModalCarrinho}/>\r\n            <NavBarLeft />\r\n            <div className={css.container_nav_bar}>\r\n                <nav className={css.content_nav_bar}>\r\n                    <div className={css.container_logo}>\r\n                        <img onClick={() => navigate(\"/home\")} src={logo} alt=\"logo-site\" />\r\n                    </div>\r\n\r\n                    <div className={css.container_menu}>\r\n                        <NavDropdown\r\n                            id=\"nav-dropdown-dark-example\"\r\n                            title=\"Categorias\"\r\n                            >\r\n                            {ItensDropDownCategorias.map((item) => (\r\n                                <NavDropdown.Item onClick={() => navigate(`/delivery/descobrir/${item}`)} key={item.length}>\r\n                                    {item}\r\n                                </NavDropdown.Item>\r\n                            ))}\r\n                        </NavDropdown>\r\n                    </div>\r\n\r\n                    <div className={css.container_input}>\r\n                        <img src=\"https://img.icons8.com/ios-filled/30/000000/search--v1.png\"/>\r\n                        <input type=\"text\" placeholder=\"Procure uma loja\"/>\r\n                    </div>\r\n\r\n                    <div className={css.container_icons}>\r\n                        <div className={css.container_carrinho} onClick={() => setOpenModalCarrinho(!openModalCarrinho)}>\r\n                            <img src=\"https://img.icons8.com/small/35/000000/shopping-cart.png\"/>\r\n                            <div>\r\n                                <span>R$ 00,00</span>\r\n                                <span>Itens: 0</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBarTop;","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\Categorias\\index.jsx",[],[],"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\Loading\\index.jsx",[],[],"C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\CarrinhoModal\\index.jsx",["125"],[],"import { useState } from \"react\";\r\nimport css from \"./styled.module.css\";\r\n\r\nconst CarrinhoModal = ({ openModalProps }) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={openModalProps ? css.container_carrinho_modal : css.container_carrinho_modal_off}>\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CarrinhoModal;","C:\\Users\\Rafael\\Documents\\GitHub\\BELDELIVERY-WEB\\src\\components\\NavBarLeft\\index.jsx",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],[],"import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport css from \"./styled.module.css\";\r\nimport Loading from \"../Loading\";\r\nimport { logout } from \"../../services/validations/validation\";\r\n\r\nconst NavBarLeft = () => {\r\n    const [typeUser, setTypeUser] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [openBar, setOpenBar] = useState(true);\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        setUserName(localStorage.getItem(\"clientName\"));\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            {loading && <Loading />}\r\n            <img className={css.icon_open_menu}\r\n                src=\"https://img.icons8.com/ios-filled/50/000000/menu--v1.png\"\r\n                onClick={() => setOpenBar(!openBar)}\r\n            />\r\n            {openBar ? (\r\n                <div className={css.container_left_bar}>\r\n                <div className={css.nav_container}>\r\n                    <div>\r\n                        <div className={css.container_avatar}>\r\n                            <div className={css.container_img_avatar}>\r\n\r\n                            </div>\r\n                            <span>{userName}</span>\r\n                        </div>\r\n                        <div className={css.menu_items} onClick={() => navigate(\"/home\")}>\r\n                            <img src=\"https://img.icons8.com/material-rounded/35/null/home-page.png\"/>\r\n                            <span>Home</span>\r\n                        </div>\r\n                        <div className={css.menu_items} onClick={() => navigate(\"/perfil\")}>\r\n                            <img src=\"https://img.icons8.com/small/35/000000/user-male-circle.png\"/>\r\n                            <span>Perfil</span>\r\n                        </div>\r\n                        {typeUser === \"ADMIN\" && (\r\n                            <div className={css.menu_items} onClick={() => navigate(\"/perfil\")}>\r\n                                <img src=\"https://img.icons8.com/small/35/000000/user-male-circle.png\"/>\r\n                                <span>Produtos</span>\r\n                            </div>\r\n                        )}\r\n                        <div className={css.menu_items} onClick={() => navigate(\"/perfil/pedidos\")}>\r\n                            <img src=\"https://img.icons8.com/sf-ultralight/35/null/mobile-order.png\"/>\r\n                            <span>Pedidos</span>\r\n                        </div>\r\n                        <div className={css.menu_items} onClick={() => navigate(\"/perfil/enderecos\")}>\r\n                            <img src=\"https://img.icons8.com/ios/35/null/order-delivered.png\"/>\r\n                            <span>Endereços</span>\r\n                        </div>\r\n                        <div className={css.menu_items} onClick={() => navigate(\"/perfil/alterar-senha\")}>\r\n                            <img src=\"https://img.icons8.com/ios/30/null/private-lock.png\"/>\r\n                            <span>Alterar senha</span>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div onClick={() => logout()}>\r\n                            <img src=\"https://img.icons8.com/windows/40/null/exit.png\"/>\r\n                            <span>Sair</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ) :\r\n                <div className={css.hidde_bar}>\r\n                    <div className={css.nav_container_hidde}>\r\n                        <div>\r\n                            <div className={css.container_avatar}>\r\n                                <div className={css.container_img_avatar}>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className={css.menu_items_hidde}>\r\n                                <img src=\"https://img.icons8.com/material-rounded/30/null/home-page.png\"/>\r\n                            </div>\r\n                            <div className={css.menu_items_hidde} onClick={() => navigate(\"/perfil\")}>\r\n                                <img src=\"https://img.icons8.com/small/30/000000/user-male-circle.png\"/>\r\n                            </div>\r\n                            <div className={css.menu_items_hidde} onClick={() => navigate(\"/perfil/pedidos\")}>\r\n                                <img src=\"https://img.icons8.com/sf-ultralight/30/null/mobile-order.png\"/>\r\n                            </div>\r\n                            <div className={css.menu_items_hidde} onClick={() => navigate(\"/perfil/enderecos\")}>\r\n                                <img src=\"https://img.icons8.com/ios/30/null/order-delivered.png\"/>\r\n                            </div>\r\n                            <div className={css.menu_items_hidde} onClick={() => navigate(\"/perfil/alterar-senha\")}>\r\n                                <img src=\"https://img.icons8.com/ios/30/null/private-lock.png\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={css.menu_items_hidde} onClick={() => logout()}>\r\n                                <img src=\"https://img.icons8.com/windows/30/null/exit.png\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default NavBarLeft;",{"ruleId":"142","severity":1,"message":"143","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":20},{"ruleId":"142","severity":1,"message":"146","line":10,"column":11,"nodeType":"144","messageId":"145","endLine":10,"endColumn":19},{"ruleId":"142","severity":1,"message":"147","line":11,"column":11,"nodeType":"144","messageId":"145","endLine":11,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":20,"column":8,"nodeType":"150","endLine":20,"endColumn":10,"suggestions":"151"},{"ruleId":"142","severity":1,"message":"152","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"153","line":10,"column":13,"nodeType":"144","messageId":"145","endLine":10,"endColumn":25},{"ruleId":"142","severity":1,"message":"154","line":10,"column":27,"nodeType":"144","messageId":"145","endLine":10,"endColumn":42},{"ruleId":"142","severity":1,"message":"155","line":11,"column":13,"nodeType":"144","messageId":"145","endLine":11,"endColumn":25},{"ruleId":"142","severity":1,"message":"156","line":32,"column":11,"nodeType":"144","messageId":"145","endLine":32,"endColumn":29},{"ruleId":"142","severity":1,"message":"157","line":37,"column":11,"nodeType":"144","messageId":"145","endLine":37,"endColumn":25},{"ruleId":"142","severity":1,"message":"158","line":52,"column":11,"nodeType":"144","messageId":"145","endLine":52,"endColumn":24},{"ruleId":"142","severity":1,"message":"159","line":14,"column":12,"nodeType":"144","messageId":"145","endLine":14,"endColumn":25},{"ruleId":"148","severity":1,"message":"160","line":68,"column":8,"nodeType":"150","endLine":68,"endColumn":21,"suggestions":"161"},{"ruleId":"142","severity":1,"message":"162","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":17},{"ruleId":"142","severity":1,"message":"163","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":19},{"ruleId":"142","severity":1,"message":"164","line":1,"column":21,"nodeType":"144","messageId":"145","endLine":1,"endColumn":29},{"ruleId":"142","severity":1,"message":"165","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":13},{"ruleId":"142","severity":1,"message":"166","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":47,"column":33,"nodeType":"169","endLine":47,"endColumn":103},{"ruleId":"142","severity":1,"message":"166","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":21},{"ruleId":"142","severity":1,"message":"170","line":7,"column":23,"nodeType":"144","messageId":"145","endLine":7,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":41,"column":25,"nodeType":"169","endLine":41,"endColumn":96},{"ruleId":"167","severity":1,"message":"168","line":47,"column":29,"nodeType":"169","endLine":47,"endColumn":98},{"ruleId":"142","severity":1,"message":"164","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":18},{"ruleId":"142","severity":1,"message":"171","line":8,"column":22,"nodeType":"144","messageId":"145","endLine":8,"endColumn":33},{"ruleId":"142","severity":1,"message":"172","line":9,"column":21,"nodeType":"144","messageId":"145","endLine":9,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":22,"column":13,"nodeType":"169","endLine":25,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":37,"column":29,"nodeType":"169","endLine":37,"endColumn":103},{"ruleId":"167","severity":1,"message":"168","line":41,"column":29,"nodeType":"169","endLine":41,"endColumn":101},{"ruleId":"167","severity":1,"message":"168","line":46,"column":33,"nodeType":"169","endLine":46,"endColumn":105},{"ruleId":"167","severity":1,"message":"168","line":51,"column":29,"nodeType":"169","endLine":51,"endColumn":103},{"ruleId":"167","severity":1,"message":"168","line":55,"column":29,"nodeType":"169","endLine":55,"endColumn":96},{"ruleId":"167","severity":1,"message":"168","line":59,"column":29,"nodeType":"169","endLine":59,"endColumn":93},{"ruleId":"167","severity":1,"message":"168","line":65,"column":29,"nodeType":"169","endLine":65,"endColumn":89},{"ruleId":"167","severity":1,"message":"168","line":81,"column":33,"nodeType":"169","endLine":81,"endColumn":107},{"ruleId":"167","severity":1,"message":"168","line":84,"column":33,"nodeType":"169","endLine":84,"endColumn":105},{"ruleId":"167","severity":1,"message":"168","line":87,"column":33,"nodeType":"169","endLine":87,"endColumn":107},{"ruleId":"167","severity":1,"message":"168","line":90,"column":33,"nodeType":"169","endLine":90,"endColumn":100},{"ruleId":"167","severity":1,"message":"168","line":93,"column":33,"nodeType":"169","endLine":93,"endColumn":97},{"ruleId":"167","severity":1,"message":"168","line":98,"column":33,"nodeType":"169","endLine":98,"endColumn":93},"no-unused-vars","'CadastroLoja' is defined but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","'actualUrl' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idClient'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'Button' is defined but never used.","'typeCadastro' is assigned a value but never used.","'setTypeCadastro' is assigned a value but never used.","'errorMesenge' is assigned a value but never used.","'typeCadastroOption' is assigned a value but never used.","'postFormClient' is assigned a value but never used.","'postFormStore' is assigned a value but never used.","'errorMessenge' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loginClient' and 'loginType'. Either include them or remove the dependency array.",["174"],"'NavBarTop' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'useNavigate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dropdown' is defined but never used.","'setTypeUser' is assigned a value but never used.","'setLoading' is assigned a value but never used.",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [idClient]",{"range":"179","text":"180"},"Update the dependencies array to be: [errorStatus, loginClient, loginType]",{"range":"181","text":"182"},[673,675],"[idClient]",[2407,2420],"[errorStatus, loginClient, loginType]"]